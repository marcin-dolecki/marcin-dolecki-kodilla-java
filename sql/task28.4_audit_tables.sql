use kodilla_course;

## BOOKS_AUD
# CREATE TABLE
CREATE TABLE BOOKS_AUD (
    EVENT_ID INT(11) NOT NULL AUTO_INCREMENT,
    EVENT_DATE DATETIME NOT NULL,
    EVENT_TYPE VARCHAR(10) DEFAULT NULL,
    BOOK_ID INT(11) NOT NULL,
    OLD_TITLE VARCHAR(255),
    NEW_TITLE VARCHAR(255),
    OLD_PUBYEAR INT(4),
    NEW_PUBYEAR INT(4),
    PRIMARY KEY (EVENT_ID)
);

# BOOKS_INSERT
DELIMITER $$
CREATE TRIGGER BOOKS_INSERT AFTER INSERT ON BOOKS
    FOR EACH ROW
BEGIN
   INSERT INTO BOOKS_AUD (EVENT_DATE, EVENT_TYPE, BOOK_ID, NEW_TITLE, NEW_PUBYEAR)
       VALUE (CURTIME(), 'INSERT', NEW.BOOK_ID, NEW.TITLE, NEW.PUBYEAR);
END $$
DELIMITER ;

INSERT INTO BOOKS (TITLE, PUBYEAR) VALUE ('Harry Potter and the Philosopher''s Stone', 1997);
COMMIT;

# BOOKS_DELETE
DELIMITER $$
CREATE TRIGGER BOOKS_DELETE BEFORE DELETE ON BOOKS
    FOR EACH ROW
BEGIN
    INSERT INTO BOOKS_AUD (EVENT_DATE, EVENT_TYPE, BOOK_ID)
        VALUE (CURTIME(), 'DELETE', OLD.BOOK_ID);

    INSERT INTO RENTS_AUD (EVENT_DATE, EVENT_TYPE, RENT_ID)
        SELECT CURTIME(), 'DELETE', RENT_ID
        FROM RENTS WHERE BOOK_ID = OLD.BOOK_ID;
END $$
DELIMITER ;

DELETE FROM BOOKS WHERE BOOK_ID = 9;

# BOOKS_UPDATE
DELIMITER $$
CREATE TRIGGER BOOKS_UPDATE AFTER UPDATE ON BOOKS
    FOR EACH ROW
BEGIN
    INSERT INTO BOOKS_AUD (EVENT_DATE, EVENT_TYPE, BOOK_ID, OLD_TITLE, NEW_TITLE, OLD_PUBYEAR, NEW_PUBYEAR)
        VALUE (CURTIME(), 'UPDATE', OLD.BOOK_ID, OLD.TITLE, NEW.TITLE,
               OLD.PUBYEAR, NEW.PUBYEAR);
END $$
DELIMITER ;

UPDATE BOOKS SET TITLE = 'The Trial TEST UPDATE'
WHERE BOOK_ID = 3;

COMMIT;
